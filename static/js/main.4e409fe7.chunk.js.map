{"version":3,"sources":["components/Header/Header.jsx","constants/ActionTypes.js","actions/index.js","components/Content/TopicsList/TopicItem/TopicItem.jsx","components/Content/TopicsList/TopicsList.jsx","components/Content/TopicsList/CreateNewItem/CreateNewItem.jsx","components/Content/TopicsList/TopicDetails/CommentItem.jsx","components/Content/TopicsList/TopicDetails/NewCommentForm.jsx","components/Content/TopicsList/TopicDetails/TopicDetails.jsx","components/Content/Content.jsx","containers/Sayer.jsx","serviceWorker.js","reducers/sayer.js","reducers/header.js","reducers/index.js","index.js"],"names":["Header","header","this","props","react_default","a","createElement","className","classNames","back","href","title","title-page","page","subtitle","Component","connect","state","ADD_TOPIC","REMOVE_TOPIC","ADD_COMMENT","CHANGE_HEADER","addTopic","text","type","types","removeTopic","id","addComment","changeHeader","TopicsItem","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","removePost","bind","assertThisInitialized","window","confirm","_this2","_this$props","index","el","comments","key","Link","to","pathname","concat","length","onClick","withRouter","dispatch","TopicsList","list","history","map","TopicItem_TopicItem","push","sayer","obj","CreateNewItem","context","changeHead","defaultHeader","handleSubmit","event","preventDefault","setState","handleChange","target","value","onSubmit","e","placeholder","onChange","required","CommentItem","avatarClass","NewCommentForm","newCommentText","TopicDetails","objectSpread","scrollTopBottom","container","current","scrollTop","scrollHeight","_this$state","toConsumableArray","reduce","maxId","topic","Math","max","setTimeout","match","commentsBlock","filter","item","Number","params","location","React","createRef","_this$state2","_this$state3","isEmpty","ref","CommentItem_CommentItem","NewCommentForm_NewCommentForm","Content","routes","path","content","Content_TopicsList_TopicsList","exact","TopicsList_CreateNewItem_CreateNewItem","TopicsList_TopicDetails_TopicDetails","BrowserRouter","route","Route","component","Sayer","components_Header_Header","Content_Content","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","itemsList","dataFromLocalStorage","localStorage","getItem","setItem","JSON","stringify","initialState","parse","rootReducer","combineReducers","arguments","undefined","action","modifiedObj","modifyLocalStorage","assign","store","createStore","reducer","ReactDOM","render","es","Sayer_Sayer","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4e409fe7.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-has-content */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\n\nimport { connect } from 'react-redux';\n\nimport './Header.scss';\n\nconst mapStateToProps = state => {\n  return { \n    header: state.header \n  };\n};\n\nclass Header extends Component {\n  static propTypes = {\n    header: PropTypes.shape({\n      back: PropTypes.bool.isRequired,\n      title: PropTypes.string,\n      page: PropTypes.bool.isRequired,\n      subtitle: PropTypes.string\n    })\n  }\n\n  render() {\n    const { header } = this.props;\n\n    return (\n      <div className={ classNames('sayer-header') }>\n        { header.back ? (\n          <div>\n            <a \n              className={ classNames('header-back') } \n              href=\"/\"\n            ></a>\n          </div>\n          ) : null }\n        { header.title ? (\n          <h1>\n            { header.title }\n          </h1> \n          ) : '' }\n        <h4 className={ classNames({'title-page': header.page}) }>\n          { header.subtitle }\n        </h4> \n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps)(Header);","export const ADD_TOPIC = 'ADD_TOPIC'\nexport const REMOVE_TOPIC = 'REMOVE_TOPIC'\nexport const ADD_COMMENT = 'ADD_COMMENT'\nexport const CHANGE_HEADER = 'CHANGE_HEADER'","import * as types from '../constants/ActionTypes'\n\nexport const addTopic = text => ({ type: types.ADD_TOPIC, text })\nexport const removeTopic = id => ({ type: types.REMOVE_TOPIC, id })\nexport const addComment = (id, text) => ({ type: types.ADD_COMMENT, id, text})\nexport const changeHeader = header => ({ type: types.CHANGE_HEADER, header })","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\n\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { removeTopic } from \"./../../../../actions\";\n\nimport './TopicItem.scss';\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    removeTopic: id => dispatch(removeTopic(id))\n  };\n}\n\nclass TopicsItem extends Component {\n  constructor () {\n    super();\n\n    this.removePost = this.removePost.bind(this);\n  }\n\n  static propTypes={\n    removeTopic: PropTypes.func.isRequired,\n    index: PropTypes.number,\n    el: PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n      comments: PropTypes.array.isRequired\n    })\n  }\n\n  removePost(id) {\n    const {removeTopic, } = this.props;\n    const isDelete = window.confirm('Do you want to DELETE this topic?');\n\n    if (isDelete) {\n      removeTopic(id);\n    }\n  }\n\n  render() {\n    const {index, el, } = this.props;\n    const {id, text, comments, } = el;\n    \n    return (\n      <li \n        key={index} \n        className={classNames('topics-item')}\n      >\n        <Link to={{\n          pathname: `/topic-${id}`,\n          state: {\n            title: text,\n            },\n          }}\n        >\n          <span className={classNames('topics-title')}>{text}</span>\n        </Link>\n        <span className={classNames('topics-counter')}>{comments.length}</span>\n        <span \n          className={classNames('topics-remove')}\n          onClick={() => this.removePost(id)}\n        >\n          Delete\n        </span>\n      </li>\n    )\n  }\n}\n\nexport default withRouter(connect(null, mapDispatchToProps)(TopicsItem));","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\n\nimport TopicItem from './TopicItem/TopicItem';\nimport { changeHeader } from \"./../../../actions\";\n\nimport './TopicsList.scss';\n\nconst mapStateToProps = state => {\n  return { \n    list: state.sayer\n  };\n};\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    changeHeader: obj => dispatch(changeHeader(obj)),\n  };\n}\n\nclass TopicsList extends Component {\n  static propTypes={\n    list: PropTypes.array.isRequired,\n    history: PropTypes.object\n  }\n\n  componentDidMount() {\n    this.props.changeHeader({\n      back: false,\n      title: 'Sayer',\n      subtitle: 'World’s most used time waster',\n      page: false,\n    });\n  }\n\n  render() {\n    const {list, history} = this.props;\n\n    return (\n      <div>\n        <div className={classNames('topics-container')}>\n          { list !== null && list.length ? (\n            <ul className={classNames('topics')}>\n              {list.map((el, index) => (\n                <TopicItem \n                  key={index}\n                  el={el}\n                />\n              ))}\n            </ul> \n            ) : <div className={classNames('empty-block')}>No items</div>\n          }\n        </div>\n        <div className={classNames('create-item')}>\n          <button \n            className={classNames('create-item-button')} \n            onClick={() => history.push('/create')}\n          >\n            <span className={classNames('create-item-text')}>+</span>\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(TopicsList));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\n\nimport { withRouter } from 'react-router-dom'\n\nimport { changeHeader, addTopic } from \"./../../../../actions\";\n\nimport './CreateNewItem.scss';\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeHeader: obj => dispatch(changeHeader(obj)),\n    addTopic: text => dispatch(addTopic(text)),\n  };\n}\n\nclass CreateNewItem extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      text: '',\n      defaultHeader: {\n        back: true,\n        title: '',\n        subtitle: 'Create new item',\n        page: true,\n      }\n    };\n  }\n\n  static propTypes={\n    changeHeader: PropTypes.func.isRequired,\n    addTopic: PropTypes.func.isRequired,\n    history: PropTypes.object,\n  }\n\n  changeHead = () => {\n    this.props.changeHeader(this.state.defaultHeader)\n  }\n\n  handleSubmit = (event) => {\n    const { addTopic, history } = this.props;\n    const { text } = this.state;\n\n    event.preventDefault();\n\n    addTopic(text);\n\n    history.push('/')\n\n    this.setState({\n      'text': ''\n    })\n  }\n\n  handleChange = (event) => {\n    this.setState({ \n      'text' : event.target.value \n    });\n  }\n\n  componentDidMount() {\n    this.changeHead();\n  }\n\n  render() {\n    return (\n      <form \n        className={classNames('new-item-form')} \n        onSubmit={(e) => this.handleSubmit(e)}\n      >\n        <input \n          className={classNames('new-item-input')} \n          type=\"text\" \n          id=\"title\" \n          placeholder=\"Type new item name\" \n          onChange={(e) => this.handleChange(e)} \n          required \n        />\n        <button className={classNames('new-item-button')}></button>\n      </form>\n    )\n  }\n}\n\nexport default withRouter(connect(null, mapDispatchToProps)(CreateNewItem));","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\n\nimport './CommentItem.scss';\n\nexport default class CommentItem extends Component {\n\n  static propTypes={\n    el: PropTypes.shape({\n      avatarClass: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired\n    })\n  }\n\n  render() {\n    const { el } = this.props;\n\n    return (\n      <li\n        className={classNames('comments-item')}\n      >\n        <div className={classNames('comments-avatar', el.avatarClass)}></div>\n        <div className={classNames('comments-text')}>{ el.text }</div>\n      </li>\n    )\n  }\n}\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\n\nexport default class NewCommentForm extends Component {\n  static propTypes={\n    newCommentText: PropTypes.string.isRequired,\n    handleChange: PropTypes.func,\n    handleSubmit: PropTypes.func,\n  }\n\n  render () {\n    const {newCommentText, onSubmit, onChange, } = this.props;\n    return (\n      <form \n        className={classNames('new-comment-form')}\n        onSubmit={onSubmit}\n      >\n        <input \n          className={classNames('new-comment-input')} \n          type=\"text\" \n          id=\"title\" \n          placeholder=\"Type new comment\" \n          onChange={onChange}\n          value={newCommentText}\n          required \n        />\n        <button className={classNames('new-comment-button')}></button>\n      </form>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\n\nimport { changeHeader, addComment } from \"./../../../../actions\";\n\nimport CommentItem from './CommentItem';\nimport NewCommentForm from './NewCommentForm';\n\nimport './TopicDetails.scss';\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeHeader: obj => dispatch(changeHeader(obj)),\n    addComment: (id, text) => dispatch(addComment(id, text)),\n  };\n}\n\nconst mapStateToProps = state => {\n  return { \n    list: state.sayer \n  };\n};\n\nclass TopicDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    const { list, match, history, } = this.props;\n    const commentsBlock = list.filter(item => (\n      Number(match.params.id) === Number(item.id))\n    );\n\n    this.state = {\n      comments: commentsBlock[0].comments,\n      title: history.location.state.title,\n      newCommentText: '',\n      id: match.params.id,\n      defaultHeader: {\n        back: true,\n        title: '',\n        subtitle: 'New Topic',\n        page: true,\n      }\n    };\n\n    //init ref element\n    this.container = React.createRef();\n  }\n\n  static propTypes={\n    list: PropTypes.array,\n    match: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired,\n    changeHeader: PropTypes.func.isRequired\n  }\n\n  changeHead = (subtitle) => {\n    const { changeHeader, } = this.props;\n    const { defaultHeader, } = this.state;\n\n    changeHeader(\n      {\n        ...defaultHeader,\n        ...{ subtitle, }\n      }\n    )\n  }\n\n  componentDidMount() {\n    const { title, comments, } = this.state;\n\n    this.changeHead(title);\n\n    if (comments.length) {\n      this.scrollTopBottom();\n    }\n  }\n\n  scrollTopBottom = () => {\n    this.container.current.scrollTop = this.container.current.scrollHeight;\n  }\n\n  handleChange = (event) => {\n    this.setState({ \n      'newCommentText' : event.target.value \n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { newCommentText, id, comments, } = this.state;\n\n    this.props.addComment(id, newCommentText);\n\n    this.setState(() => ({\n      'comments': [...comments, {\n        'id': comments.reduce((maxId, topic) => Math.max(topic.id, maxId), -1) + 1,\n        'avatarClass': comments.length % 2 === 1 ? 'male' : 'female',\n        'text': newCommentText,\n      }],\n      'newCommentText': '',\n    }))\n\n    setTimeout(() => {this.scrollTopBottom()});\n  }\n\n  render() {\n    const { comments, newCommentText, } = this.state;\n    const isEmpty = !!comments.length;\n\n    return (\n      <div className={classNames('comments-container')}>\n        { isEmpty ?\n          <div \n            className={classNames('comments-scroll')} \n            ref={this.container}\n          >\n            <ul className={classNames('comments')}>\n              { comments.map((el, index) => (\n                  <CommentItem\n                    el={el}\n                    index={el.id}\n                    key={index}\n                  />\n                ))\n              }\n            </ul>\n          </div>\n          : <div className={classNames('empty-block')}>No comments</div> \n        }\n        <NewCommentForm \n          newCommentText={newCommentText}\n          onSubmit={(e) => this.handleSubmit(e)}\n          onChange={(e) => this.handleChange(e)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(TopicDetails));","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route, } from \"react-router-dom\";\nimport classNames from 'classnames/bind';\n\nimport TopicsList from './TopicsList/TopicsList';\nimport CreateNewItem from './TopicsList/CreateNewItem/CreateNewItem';\nimport TopicDetails from './TopicsList/TopicDetails/TopicDetails';\n\nexport default class Content extends Component {\n  routes = [\n    {\n      path: '/',\n      content: () => <TopicsList />,\n      exact: true,\n    },\n    {\n      path: '/create',\n      content: () => <CreateNewItem />,\n    },\n    {\n      path: '/topic-:id',\n      content: () => <TopicDetails />,\n    }\n  ]\n\n  render() {\n    return (\n      <Router>\n        <div className={classNames('container')}>\n            {this.routes.map((route, index) => (\n              <Route\n                key={index}\n                path={route.path}\n                exact={route.exact}\n                component={route.content}\n              />\n            ))}\n          </div>\n      </Router>\n    )\n  }\n}\n\nwithRouter(connect(null, null)(Content));","import React, { Component } from 'react';\n\nimport './Sayer.scss';\n\n// components\n\nimport Header from '../components/Header/Header';\nimport Content from '../components/Content/Content';\n\nexport default class Sayer extends Component {\n  render() {\n    return (\n      <div className=\"sayer\">\n        <Header />\n        <Content />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  ADD_TOPIC,\n  REMOVE_TOPIC,\n  ADD_COMMENT,\n} from '../constants/ActionTypes';\n\nconst itemsList = [\n  {\n    id: 0,\n    text: 'First item with customized long title',\n    comments: [\n      {\n        id: 0,\n        text: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using \\'Content here, content here\\', making it look like readable English. ',\n        avatarClass: 'male',\n      },\n      {\n        id: 1,\n        text: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout..',\n        avatarClass: 'female',\n      }]\n\n  },\n  {\n    id: 1,\n    text: 'Second item',\n    comments: []\n\n  },\n  {\n    id: 2,\n    text: 'Third item (short one)',\n    comments: [\n      {\n        id: 0,\n        text: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using \\'Content here, content here\\', making it look like readable English. ',\n        avatarClass: 'male',\n      },\n      {\n        id: 1,\n        text: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout..',\n        avatarClass: 'female',\n      },\n      {\n        id: 2,\n        text: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout..',\n        avatarClass: 'female',\n      },\n      {\n        id: 3,\n        text: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using \\'Content here, content here\\', making it look like readable English. ',\n        avatarClass: 'male',\n      },\n      {\n        id: 4,\n        text: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout..',\n        avatarClass: 'female',\n      },\n      {\n        id: 5,\n        text: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using \\'Content here, content here\\', making it look like readable English. ',\n        avatarClass: 'male',\n      },\n      {\n        id: 6,\n        text: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout..',\n        avatarClass: 'female',\n      },\n      {\n        id: 7,\n        text: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using \\'Content here, content here\\', making it look like readable English. ',\n        avatarClass: 'male',\n      },\n      {\n        id: 8,\n        text: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout..',\n        avatarClass: 'female',\n      },\n      {\n        id: 9,\n        text: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using \\'Content here, content here\\', making it look like readable English. ',\n        avatarClass: 'male',\n      },\n      {\n        id: 10,\n        text: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout..',\n        avatarClass: 'female',\n      },\n      {\n        id: 11,\n        text: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using \\'Content here, content here\\', making it look like readable English. ',\n        avatarClass: 'male',\n      },\n      {\n        id: 12,\n        text: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout..',\n        avatarClass: 'female',\n      },\n      {\n        id: 13,\n        text: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using \\'Content here, content here\\', making it look like readable English. ',\n        avatarClass: 'male',\n      },\n      {\n        id: 14,\n        text: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout..',\n        avatarClass: 'female',\n      },\n      {\n        id: 15,\n        text: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout..',\n        avatarClass: 'female',\n      },\n      {\n        id: 16,\n        text: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using \\'Content here, content here\\', making it look like readable English. ',\n        avatarClass: 'male',\n      },\n      {\n        id: 17,\n        text: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout..',\n        avatarClass: 'female',\n      },\n      {\n        id: 18,\n        text: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout..',\n        avatarClass: 'female',\n      },\n    ]\n  },\n];\n\n// get data from the local storage\n// if NULL, set default data\nconst dataFromLocalStorage = localStorage.getItem('itemsList');\nconst isEmpty = dataFromLocalStorage !== null && dataFromLocalStorage.length;\n\nif (!isEmpty) localStorage.setItem('itemsList', JSON.stringify(itemsList));\n\nconst initialState = isEmpty ? JSON.parse(dataFromLocalStorage) : itemsList;\n\nexport default function sayer(state = initialState, action) {\n  let modifiedObj = void 0;\n\n  const modifyLocalStorage = obj => localStorage.setItem('itemsList', JSON.stringify(obj));\n\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case ADD_TOPIC:\n\n    modifiedObj = [      \n      {\n        id: state.reduce((maxId, topic) => Math.max(topic.id, maxId), -1) + 1,\n        text: action.text,\n        comments: [],\n      }, \n      ...state\n    ];\n\n    modifyLocalStorage(modifiedObj);\n\n    return modifiedObj;\n\n    case REMOVE_TOPIC:\n\n    modifiedObj = state.filter(topic => (topic.id !== action.id));\n\n    modifyLocalStorage(modifiedObj);\n\n    return modifiedObj;\n\n    case ADD_COMMENT:\n\n    modifiedObj = state.map((item) => {\n      if (Number(item.id) === Number(action.id)) {\n        return Object.assign({}, {\n          ...item, \n          comments: [...item.comments, {\n            id: item.comments.reduce((maxId, topic) => Math.max(topic.id, maxId), -1) + 1,\n            avatarClass: item.comments.length % 2 === 1 ? 'male' : 'female',\n            text: action.text,\n          }]\n        })\n      }\n\n      return item;\n    });\n\n    modifyLocalStorage(modifiedObj);\n\n    return JSON.parse(localStorage.getItem('itemsList'));\n\n    default:\n    return state;\n  }\n}","import {\n  CHANGE_HEADER,\n} from '../constants/ActionTypes';\n\nconst initialState = {\n    back: false,\n    title: 'Sayer',\n    subtitle: 'World’s most used time waster',\n    page: false,\n}\n\nexport default function header(state = initialState, action) {\n  switch(action.type) {\n    case CHANGE_HEADER:\n    return Object.assign({}, state, action.header);\n\n    default:\n    return state;\n  }\n}","import { combineReducers } from 'redux'\nimport sayer from './sayer'\nimport header from './header'\n\nconst rootReducer = combineReducers({\n  sayer,\n  header,\n})\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport Sayer from './containers/Sayer';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './reducers';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Sayer />\n  </Provider>,\n  document.getElementById('root')\n);\n\nwithRouter(connect(null, null)(Sayer));\n\nserviceWorker.register();\n"],"sourceRoot":""}